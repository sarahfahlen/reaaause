@using reaause.Services.Advertisment
@using shared;
@inject NavigationManager navManager
@inject IAdvertisementService aService
@inject ILoginService lService
@page "/market"

<h3>Market</h3>

<div class="item-grid">
    @foreach (var ad in ads)
    {
        <div class="item-card">
            <div class="image-container">
                @if (!string.IsNullOrWhiteSpace(ad.Picture))
                {
                    <img src="@ad.Picture" alt="AdPicture" class="item-image" />
                }
                <div class="badge @GetStatusBadgeClass(ad.Status)">
                    @ad.Status
                </div>
            </div>

            <div class="item-info">
                <h3 class="ad-title">@ad.Name</h3>
                <div class="ad-details">
                    <div><span>Category:</span> @ad.Category</div>
                    <div><span>Color:</span> @ad.Color</div>
                    <div><span>Price:</span> @ad.Price DKK</div>
                    <div><span>Condition:</span> @ad.Condition</div>
                    <div><span>At School:</span> @(ad.AtSchool ? "Yes" : "No")</div>
                    <div><span>Location:</span> @ad.Location?.Name</div>
                    <div><span>Owner:</span> @ad.Seller?.Name</div>
                </div>

                <p class="ad-description">@ad.Description</p>
                @if (loggedIn.Name != ad.Seller.Name)
                {
                    <button class ="buy-button"> Request purchase </button>
                }
            </div>
        </div>
    }
</div>


@code {
    private List<Advertisement> ads = new();
    private User? loggedIn;

    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();
        if (loggedIn == null)
        {
            navManager.NavigateTo("login/market");
            return;
        }
        await GetAllActive();
    }

    private async Task GetAllActive()
    {
        ads = await aService.GetAllActiveAds();
    }
    
    //used for styling the badge in the advertisements
    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "active" => "badge-active",
            "reserved" => "badge-reserved",
            "sold" => "badge-sold",
            "inactive" => "badge-inactive",
            _ => "badge-default"
        };
    }
    
    
}